{
  "version": "3.4",
  "log": [
    {
      "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted": {
        "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "isWhitelisted(bytes32,bytes32[])",
          "isWhitelistedUser(address,bytes32[])",
          "getMerkleRoot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4c1ad18b912387feabf41107678be0a3ab5393431dae03e52b4c92adff2552ad",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "eb5397750e3916bed850c0d6bc99f547463388ff282fa8b9612a71b5944446e7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\SignatureChecker.sol:16",
        "version": {
          "withMetadata": "5a9e2ef0dd5bec0a2e793bc5bc8533aeaf1fe6a7e498cc0926b0fd2b47015082",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "cdc5415251af753795e5b1d7829e95d909c97a8d16890ccc22addd8061897c51",
          "withoutMetadata": "97aa7a595c0be3c9572e4b26d9f45498c0462d43cbb74a7e992aef0ede85ff20",
          "linkedWithoutMetadata": "97aa7a595c0be3c9572e4b26d9f45498c0462d43cbb74a7e992aef0ede85ff20"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string,address[])",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "removeMember(address)",
          "removeMembers(address[])",
          "getMessage()",
          "getMessageHash()",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)9816",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)5641_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)9816": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5641_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5326_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5326_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "de15378b2ea134bfd95ae9b3f783f7b100afc9dbd053767c1103e309e4eb0e1c",
          "withoutMetadata": "4682f992c2ca1197cd3189bf1e66712394baf3b69185ce0cd684a8b7f6c62a60",
          "linkedWithoutMetadata": "4682f992c2ca1197cd3189bf1e66712394baf3b69185ce0cd684a8b7f6c62a60"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)10937",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)9816",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)13110_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)13394_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)9816": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)13386": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)10937": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)13394_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)13386",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)13110_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)13394_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "e3894f7fc29e829cb7bbd7ce1a655b2595df13fe9c4d9a0c49ec503359104598",
          "withoutMetadata": "d661cae13fba50c9ebab9bc8eae4e083381894abb5365e9e7c655225f5fcc130",
          "linkedWithoutMetadata": "d661cae13fba50c9ebab9bc8eae4e083381894abb5365e9e7c655225f5fcc130"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "addPanel(string)",
          "removePanel(string)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "checkPermission(address,string)",
          "getConfDAOParameterStorage(string)",
          "getResource()",
          "getPanels()",
          "getRegistryContractAddresses()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)16085",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)9816",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)17400_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            },
            {
              "label": "_registryContractNames",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)17400_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)9816": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)16085": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)17400_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:46",
        "version": {
          "withMetadata": "1491cd8b92f5aa4b5da9b14c15035c4df728c12ceb439fae5d655ab4200dd01b",
          "withoutMetadata": "4d1a6e33fed29a31b4e215b93a0c0d2e15d5c39b0d43459e2ed6b9b521a5ac19",
          "linkedWithoutMetadata": "4d1a6e33fed29a31b4e215b93a0c0d2e15d5c39b0d43459e2ed6b9b521a5ac19"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@q-dev/gdk-contracts/libs/ConstitutionData.sol:ConstitutionDataLib",
          "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "signConstitution(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "getUserConstitutionData(address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)9816",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:62"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:65"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)16514_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:68"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:71"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)5641_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:74"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5798_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:77"
            },
            {
              "label": "_constitutionData",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(ConstitutionData)10690_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)9816": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)16514_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5798_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5641_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(ConstitutionData)10690_storage)": {
              "label": "mapping(address => struct IDAOVault.ConstitutionData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)16514_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)5798_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5641_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5326_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ConstitutionData)10690_storage": {
              "label": "struct IDAOVault.ConstitutionData",
              "members": [
                {
                  "label": "isSigned",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "signedAt",
                  "type": "t_uint128",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Queue)16938_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5326_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)16514_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)16938_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)5798_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5326_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "50fa87fea4bc2a7ca69f778db714847fa661f8b795567a92bc0ef3341de9ec75",
          "withoutMetadata": "4abdae3befd61ebfcf6f6332a93c0899a8512ac1ce11c5ac57e0e06a0ddda925",
          "linkedWithoutMetadata": "4abdae3befd61ebfcf6f6332a93c0899a8512ac1ce11c5ac57e0e06a0ddda925"
        },
        "inherit": [
          "@solarity/solidity-lib/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@solarity/solidity-lib/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC",
          "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17400_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)17400_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)17400_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)5641_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)11207_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)6323": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)17400_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)17400_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17400_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)11207_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5641_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5326_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)17400_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5326_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)11207_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)6323",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:27",
        "inherit": [
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)16085",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)16085": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "removeMember(address)",
          "removeMembers(address[])",
          "getMessage()",
          "getMessageHash()",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "getRegistryContractAddresses()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "signConstitution(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "getUserConstitutionData(address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "39e8630776b4afeca51088fdfb4372e4f83f5a51c40e61ced8f19147ee4112f5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ConstitutionData.sol:ConstitutionDataLib": {
        "src": "@q-dev\\gdk-contracts\\libs\\ConstitutionData.sol:12",
        "version": {
          "withMetadata": "2d9f71ca199ad7673900fb7ff493dfe4e1aab3f333a6feb8de58c4f2f6338057",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "bbac080c6e255d7117a1bc3b438c7e13f90e5c0dc68cc2834a5ecaefc72f4411",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "efd026b63b1de91c7d2b71f02b0b1e49d8e924ae7cd2e9c8a307174b4f6354fa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/access-control/RBAC.sol:RBAC": {
        "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet",
          "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper",
          "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17400_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)17400_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)17400_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)17400_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17400_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)17400_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@solarity/solidity-lib/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC",
          "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet",
          "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17400_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)17400_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)17400_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)17400_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)17400_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17400_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)17400_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)17400_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)16085",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)16085": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "538ce5914c218c25439708956fe040019907f4d0917658625576104b58e54eb2",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@solarity\\solidity-lib\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@solarity\\solidity-lib\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@solarity\\solidity-lib\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "71cb3335377eb497652a16949fab8404321c470a9f0f6c971bdb83e1a6f1ab90",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@solarity\\solidity-lib\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "083a68edbaba4f48cd6d5fa88334f09f4e90dc3fb829ed48c2b8834217f1a53f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@solarity\\solidity-lib\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "498049fd0fdca3372a31b9bd8661d2c6554f301def0ea3d57619d3ee3a1e06da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@solarity\\solidity-lib\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "69a17078ca34bb4bc80ee685aab7051c05040aeefab82a5373069186cacf7651",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV1.sol:AirDropV1": {
        "src": "contracts\\AirDropV1.sol:9",
        "version": {
          "withMetadata": "1c423ddb5f0717ddf74a529c4e3971e2cf83e72066422f959a4d09958ee0bb32",
          "withoutMetadata": "abbac8898d4b1d34c03a094fd969410560934c7966d908c28981c7f4d61d3141",
          "linkedWithoutMetadata": "abbac8898d4b1d34c03a094fd969410560934c7966d908c28981c7f4d61d3141"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted"
        ],
        "libraries": [
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "create_airdrop(address,uint256,bytes32)",
          "claimReward(address,bytes32[])",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:15"
            },
            {
              "label": "rewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:16"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV2.sol:AirDropV2": {
        "src": "contracts\\AirDropV2.sol:9",
        "version": {
          "withMetadata": "4e9da5f993f23a9f0dae496ce3a1cc6fba78a6cc9f3c8ed16ce2d06c7bc8d702",
          "withoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc",
          "linkedWithoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc"
        },
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop"
        ],
        "libraries": [],
        "methods": [
          "__AirDropV2_init(address)",
          "createCampaign(address,uint256,bytes32,uint256,uint256)",
          "claimReward(uint256,address,bytes32[])",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)20330_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "3",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "votingContract",
              "offset": 2,
              "slot": "3",
              "type": "t_address",
              "contract": "AirDropV2",
              "src": "contracts\\AirDropV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)20330_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)20330_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/GeneralDAOVoting.sol:GeneralDAOVoting": {
        "src": "contracts\\GeneralDAOVoting.sol:24",
        "version": {
          "withMetadata": "a0cad4fb861c94a09d79c5a25cfa60380456b4002783bd1a24d391f8ebfc520a",
          "withoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e",
          "linkedWithoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAOVoting_init((string,address),string)",
          "setDependencies(address,bytes)",
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)",
          "getProposalVotingStats(uint256)",
          "getVotingSituations()",
          "getVotingSituationInfo(string)",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_VOTING_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:42"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:44"
            },
            {
              "label": "votingToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:46"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:48"
            },
            {
              "label": "daoVault",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(DAOVault)8507",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:50"
            },
            {
              "label": "daoRegistry",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(DAORegistry)7283",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:51"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(PermissionManager)9816",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:52"
            },
            {
              "label": "daoParameterStorage",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(DAOParameterStorage)6650",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:53"
            },
            {
              "label": "_votingSituations",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)17400_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:55"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(DAOProposal)11060_storage)",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:57"
            },
            {
              "label": "hasUserVoted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:58"
            },
            {
              "label": "hasUserVetoed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DAOParameterStorage)6650": {
              "label": "contract DAOParameterStorage",
              "numberOfBytes": "20"
            },
            "t_contract(DAORegistry)7283": {
              "label": "contract DAORegistry",
              "numberOfBytes": "20"
            },
            "t_contract(DAOVault)8507": {
              "label": "contract DAOVault",
              "numberOfBytes": "20"
            },
            "t_contract(PermissionManager)9816": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(VotingType)10937": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(DAOProposal)11060_storage)": {
              "label": "mapping(uint256 => struct IDAOVoting.DAOProposal)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DAOProposal)11060_storage": {
              "label": "struct IDAOVoting.DAOProposal",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "remark",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "relatedExpertPanel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "relatedVotingSituation",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "callData",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "params",
                  "type": "t_struct(VotingParams)11019_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "counters",
                  "type": "t_struct(VotingCounters)11026_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "17"
                }
              ],
              "numberOfBytes": "576"
            },
            "t_struct(Set)17400_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VotingCounters)11026_storage": {
              "label": "struct IDAOVoting.VotingCounters",
              "members": [
                {
                  "label": "votedFor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votedAgainst",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "vetoesCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VotingParams)11019_storage": {
              "label": "struct IDAOVoting.VotingParams",
              "members": [
                {
                  "label": "votingType",
                  "type": "t_enum(VotingType)10937",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vetoEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "proposalExecutionPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "requiredQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "requiredMajority",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "requiredVetoQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop": {
        "src": "contracts\\libs\\ACampaignAirDrop.sol:22",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof",
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "isWhitelisted(uint256,bytes32,bytes32[])",
          "isWhitelistedUser(uint256,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)20330_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)20330_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)20330_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "fba36f89c5eb928742848e8fa1eac6fd14bca814db04aff5cb59844171c9d1bb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4c1ad18b912387feabf41107678be0a3ab5393431dae03e52b4c92adff2552ad",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "eb5397750e3916bed850c0d6bc99f547463388ff282fa8b9612a71b5944446e7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\SignatureChecker.sol:16",
        "version": {
          "withMetadata": "5a9e2ef0dd5bec0a2e793bc5bc8533aeaf1fe6a7e498cc0926b0fd2b47015082",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "dfbf2e8764fa5f156cbae7c08beb1c049659e26781c61357efe372f18e262e32",
          "withoutMetadata": "97aa7a595c0be3c9572e4b26d9f45498c0462d43cbb74a7e992aef0ede85ff20",
          "linkedWithoutMetadata": "97aa7a595c0be3c9572e4b26d9f45498c0462d43cbb74a7e992aef0ede85ff20"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string,address[])",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "removeMember(address)",
          "removeMembers(address[])",
          "getMessage()",
          "getMessageHash()",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)9554",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)5379_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)9554": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5379_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5064_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5064_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "c9b2b7cc4c72142172f2c6eb12e973d05c8cdf76e6169b036fae8e2fceceacdd",
          "withoutMetadata": "4682f992c2ca1197cd3189bf1e66712394baf3b69185ce0cd684a8b7f6c62a60",
          "linkedWithoutMetadata": "4682f992c2ca1197cd3189bf1e66712394baf3b69185ce0cd684a8b7f6c62a60"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)10675",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)9554",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)12848_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)13132_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)9554": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)13124": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)10675": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)13132_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)13124",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)12848_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)13132_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "59921e482a4bf2687936ce61ddea3b9f2765b3feafd62a4b03eeb42b3dd0fc71",
          "withoutMetadata": "d661cae13fba50c9ebab9bc8eae4e083381894abb5365e9e7c655225f5fcc130",
          "linkedWithoutMetadata": "d661cae13fba50c9ebab9bc8eae4e083381894abb5365e9e7c655225f5fcc130"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "addPanel(string)",
          "removePanel(string)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "checkPermission(address,string)",
          "getConfDAOParameterStorage(string)",
          "getResource()",
          "getPanels()",
          "getRegistryContractAddresses()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)15823",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)9554",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)17138_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            },
            {
              "label": "_registryContractNames",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)17138_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)9554": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)15823": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)17138_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:46",
        "version": {
          "withMetadata": "748fa4f9a9b7455c5a09ed8bfb4b2e0831d9f5307db033773391ce56c2683f1f",
          "withoutMetadata": "4d1a6e33fed29a31b4e215b93a0c0d2e15d5c39b0d43459e2ed6b9b521a5ac19",
          "linkedWithoutMetadata": "4d1a6e33fed29a31b4e215b93a0c0d2e15d5c39b0d43459e2ed6b9b521a5ac19"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@q-dev/gdk-contracts/libs/ConstitutionData.sol:ConstitutionDataLib",
          "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "signConstitution(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "getUserConstitutionData(address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)9554",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:62"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:65"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)16252_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:68"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:71"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)5379_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:74"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5536_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:77"
            },
            {
              "label": "_constitutionData",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(ConstitutionData)10428_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)9554": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)16252_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)5536_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)5379_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(ConstitutionData)10428_storage)": {
              "label": "mapping(address => struct IDAOVault.ConstitutionData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)16252_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)5536_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5379_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5064_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ConstitutionData)10428_storage": {
              "label": "struct IDAOVault.ConstitutionData",
              "members": [
                {
                  "label": "isSigned",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "signedAt",
                  "type": "t_uint128",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Queue)16676_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5064_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)16252_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)16676_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)5536_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5064_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "25b338d3659308c43ed5e5a5a5f19841b824f16ef74b7e490abd8f8d697ef067",
          "withoutMetadata": "4abdae3befd61ebfcf6f6332a93c0899a8512ac1ce11c5ac57e0e06a0ddda925",
          "linkedWithoutMetadata": "4abdae3befd61ebfcf6f6332a93c0899a8512ac1ce11c5ac57e0e06a0ddda925"
        },
        "inherit": [
          "@solarity/solidity-lib/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@solarity/solidity-lib/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC",
          "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17138_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)17138_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)17138_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)5379_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)10945_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)6061": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)17138_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)17138_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17138_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)10945_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)5379_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5064_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)17138_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5064_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)10945_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)6061",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:27",
        "inherit": [
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)15823",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)15823": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "removeMember(address)",
          "removeMembers(address[])",
          "getMessage()",
          "getMessageHash()",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "getRegistryContractAddresses()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "signConstitution(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "getUserConstitutionData(address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "39e8630776b4afeca51088fdfb4372e4f83f5a51c40e61ced8f19147ee4112f5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ConstitutionData.sol:ConstitutionDataLib": {
        "src": "@q-dev\\gdk-contracts\\libs\\ConstitutionData.sol:12",
        "version": {
          "withMetadata": "3c33b5627684c3cdc94e12ef26785751971b335e204f05ca9df771da82433671",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "bbac080c6e255d7117a1bc3b438c7e13f90e5c0dc68cc2834a5ecaefc72f4411",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "2c3bd11b52dc8ef993c05c874a82e76c1e2252ed40fa1a654c6b7b9b1e7632e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/access-control/RBAC.sol:RBAC": {
        "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet",
          "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper",
          "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17138_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)17138_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)17138_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)17138_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17138_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)17138_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@solarity/solidity-lib/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC",
          "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet",
          "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17138_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)17138_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)17138_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)17138_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)17138_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)17138_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)17138_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)17138_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)15823",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)15823": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "538ce5914c218c25439708956fe040019907f4d0917658625576104b58e54eb2",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@solarity\\solidity-lib\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@solarity\\solidity-lib\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@solarity\\solidity-lib\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "71cb3335377eb497652a16949fab8404321c470a9f0f6c971bdb83e1a6f1ab90",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@solarity\\solidity-lib\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "083a68edbaba4f48cd6d5fa88334f09f4e90dc3fb829ed48c2b8834217f1a53f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@solarity\\solidity-lib\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "498049fd0fdca3372a31b9bd8661d2c6554f301def0ea3d57619d3ee3a1e06da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@solarity\\solidity-lib\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "69a17078ca34bb4bc80ee685aab7051c05040aeefab82a5373069186cacf7651",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV2.sol:AirDropV2": {
        "src": "contracts\\AirDropV2.sol:9",
        "version": {
          "withMetadata": "356fd49aecbc71da7af85f3d944b1cc4552ea94c99a2844cd122d677fffdcbd7",
          "withoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc",
          "linkedWithoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc"
        },
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop"
        ],
        "libraries": [],
        "methods": [
          "__AirDropV2_init(address)",
          "createCampaign(address,uint256,bytes32,uint256,uint256)",
          "claimReward(uint256,address,bytes32[])",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)18403_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "3",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "votingContract",
              "offset": 2,
              "slot": "3",
              "type": "t_address",
              "contract": "AirDropV2",
              "src": "contracts\\AirDropV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)18403_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)18403_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop": {
        "src": "contracts\\libs\\ACampaignAirDrop.sol:22",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof",
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "isWhitelisted(uint256,bytes32,bytes32[])",
          "isWhitelistedUser(uint256,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)18403_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)18403_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)18403_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "e3763b87b0f9db2cd4a2db43f7a4f4c734c656cdba7c77300893c30e2103b30f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted": {
        "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "isWhitelisted(bytes32,bytes32[])",
          "isWhitelistedUser(address,bytes32[])",
          "getMerkleRoot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "bb3d9edc8088db372d00a0c9a6e04ea6a9ebd40c17e183922d083ae6fb9ffd57",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1271.sol:IERC1271": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1271.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes32,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4c1ad18b912387feabf41107678be0a3ab5393431dae03e52b4c92adff2552ad",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\ECDSA.sol:14",
        "version": {
          "withMetadata": "eb5397750e3916bed850c0d6bc99f547463388ff282fa8b9612a71b5944446e7",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\SignatureChecker.sol:16",
        "version": {
          "withMetadata": "5a9e2ef0dd5bec0a2e793bc5bc8533aeaf1fe6a7e498cc0926b0fd2b47015082",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "dfbf2e8764fa5f156cbae7c08beb1c049659e26781c61357efe372f18e262e32",
          "withoutMetadata": "97aa7a595c0be3c9572e4b26d9f45498c0462d43cbb74a7e992aef0ede85ff20",
          "linkedWithoutMetadata": "97aa7a595c0be3c9572e4b26d9f45498c0462d43cbb74a7e992aef0ede85ff20"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string,address[])",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "removeMember(address)",
          "removeMembers(address[])",
          "getMessage()",
          "getMessageHash()",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)10439",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)6264_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)10439": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6264_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5949_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5949_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "c9b2b7cc4c72142172f2c6eb12e973d05c8cdf76e6169b036fae8e2fceceacdd",
          "withoutMetadata": "4682f992c2ca1197cd3189bf1e66712394baf3b69185ce0cd684a8b7f6c62a60",
          "linkedWithoutMetadata": "4682f992c2ca1197cd3189bf1e66712394baf3b69185ce0cd684a8b7f6c62a60"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)11560",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)10439",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)13753_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)14037_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)10439": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)14029": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)11560": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)14037_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)14029",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)13753_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)14037_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "59921e482a4bf2687936ce61ddea3b9f2765b3feafd62a4b03eeb42b3dd0fc71",
          "withoutMetadata": "d661cae13fba50c9ebab9bc8eae4e083381894abb5365e9e7c655225f5fcc130",
          "linkedWithoutMetadata": "d661cae13fba50c9ebab9bc8eae4e083381894abb5365e9e7c655225f5fcc130"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "addPanel(string)",
          "removePanel(string)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "checkPermission(address,string)",
          "getConfDAOParameterStorage(string)",
          "getResource()",
          "getPanels()",
          "getRegistryContractAddresses()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)16788",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)10439",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)18103_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            },
            {
              "label": "_registryContractNames",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)18103_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)10439": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)16788": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)18103_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:46",
        "version": {
          "withMetadata": "748fa4f9a9b7455c5a09ed8bfb4b2e0831d9f5307db033773391ce56c2683f1f",
          "withoutMetadata": "4d1a6e33fed29a31b4e215b93a0c0d2e15d5c39b0d43459e2ed6b9b521a5ac19",
          "linkedWithoutMetadata": "4d1a6e33fed29a31b4e215b93a0c0d2e15d5c39b0d43459e2ed6b9b521a5ac19"
        },
        "inherit": [
          "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@q-dev/gdk-contracts/libs/ConstitutionData.sol:ConstitutionDataLib",
          "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "signConstitution(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "getUserConstitutionData(address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)10439",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:62"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:65"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)17217_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:68"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:71"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)6264_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:74"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)6421_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:77"
            },
            {
              "label": "_constitutionData",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(ConstitutionData)11313_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)10439": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)17217_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)6421_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)6264_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(ConstitutionData)11313_storage)": {
              "label": "mapping(address => struct IDAOVault.ConstitutionData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)17217_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)6421_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6264_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5949_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ConstitutionData)11313_storage": {
              "label": "struct IDAOVault.ConstitutionData",
              "members": [
                {
                  "label": "isSigned",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "signedAt",
                  "type": "t_uint128",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Queue)17641_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5949_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)17217_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)17641_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)6421_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5949_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "25b338d3659308c43ed5e5a5a5f19841b824f16ef74b7e490abd8f8d697ef067",
          "withoutMetadata": "4abdae3befd61ebfcf6f6332a93c0899a8512ac1ce11c5ac57e0e06a0ddda925",
          "linkedWithoutMetadata": "4abdae3befd61ebfcf6f6332a93c0899a8512ac1ce11c5ac57e0e06a0ddda925"
        },
        "inherit": [
          "@solarity/solidity-lib/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@solarity/solidity-lib/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC",
          "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)18103_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)18103_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)18103_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)6264_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)11830_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)6946": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)18103_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)18103_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)18103_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)11830_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)6264_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)5949_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)18103_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)5949_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)11830_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)6946",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:27",
        "inherit": [
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)16788",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)16788": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "removeMember(address)",
          "removeMembers(address[])",
          "getMessage()",
          "getMessageHash()",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "getRegistryContractAddresses()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "signConstitution(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "getUserConstitutionData(address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IContractMetadata.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "39e8630776b4afeca51088fdfb4372e4f83f5a51c40e61ced8f19147ee4112f5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ConstitutionData.sol:ConstitutionDataLib": {
        "src": "@q-dev\\gdk-contracts\\libs\\ConstitutionData.sol:12",
        "version": {
          "withMetadata": "3c33b5627684c3cdc94e12ef26785751971b335e204f05ca9df771da82433671",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/ECDSA.sol:ECDSA",
          "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol:SignatureChecker",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "bbac080c6e255d7117a1bc3b438c7e13f90e5c0dc68cc2834a5ecaefc72f4411",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "2c3bd11b52dc8ef993c05c874a82e76c1e2252ed40fa1a654c6b7b9b1e7632e1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/access-control/RBAC.sol:RBAC": {
        "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet",
          "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper",
          "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)18103_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)18103_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)18103_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)18103_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)18103_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)18103_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@solarity/solidity-lib/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC",
          "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet",
          "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)18103_storage))",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)18103_storage)",
              "contract": "RBAC",
              "src": "@solarity\\solidity-lib\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)18103_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)",
              "contract": "RBACGroupable",
              "src": "@solarity\\solidity-lib\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)18103_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)18103_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)18103_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)18103_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)18103_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)16788",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)16788": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "538ce5914c218c25439708956fe040019907f4d0917658625576104b58e54eb2",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@solarity\\solidity-lib\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@solarity\\solidity-lib\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@solarity\\solidity-lib\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@solarity\\solidity-lib\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "71cb3335377eb497652a16949fab8404321c470a9f0f6c971bdb83e1a6f1ab90",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@solarity\\solidity-lib\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "083a68edbaba4f48cd6d5fa88334f09f4e90dc3fb829ed48c2b8834217f1a53f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@solarity\\solidity-lib\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "498049fd0fdca3372a31b9bd8661d2c6554f301def0ea3d57619d3ee3a1e06da",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@solarity/solidity-lib/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@solarity\\solidity-lib\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "69a17078ca34bb4bc80ee685aab7051c05040aeefab82a5373069186cacf7651",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV1.sol:AirDropV1": {
        "src": "contracts\\AirDropV1.sol:9",
        "version": {
          "withMetadata": "26bb29ce6af2dae950a152b1b859d252ccce7bf3ed8816d55d63dce6d662f847",
          "withoutMetadata": "abbac8898d4b1d34c03a094fd969410560934c7966d908c28981c7f4d61d3141",
          "linkedWithoutMetadata": "abbac8898d4b1d34c03a094fd969410560934c7966d908c28981c7f4d61d3141"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted"
        ],
        "libraries": [
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "create_airdrop(address,uint256,bytes32)",
          "claimReward(address,bytes32[])",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:15"
            },
            {
              "label": "rewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:16"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/QRC20.sol:QRC20": {
        "src": "contracts\\QRC20.sol:19",
        "version": {
          "withMetadata": "4b1a028e0ab6c1b87ecc790280695dd2136cda58b61aefef7be7123c68c4af04",
          "withoutMetadata": "0ee64d3ce15711244703547feb6f763b719f6bd9f5766a01cead10e1cdc37882",
          "linkedWithoutMetadata": "0ee64d3ce15711244703547feb6f763b719f6bd9f5766a01cead10e1cdc37882"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,string,string,uint256)",
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:16"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "QRC20_RESOURCE",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:20"
            },
            {
              "label": "totalSupplyCap",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "154",
              "type": "t_uint8",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop": {
        "src": "contracts\\libs\\ACampaignAirDrop.sol:22",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof",
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "isWhitelisted(uint256,bytes32,bytes32[])",
          "isWhitelistedUser(uint256,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)19536_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)19536_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)19536_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "e3763b87b0f9db2cd4a2db43f7a4f4c734c656cdba7c77300893c30e2103b30f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/RBAC.sol:RBAC": {
        "src": "@dlsl/dev-modules/access-control/RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper",
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:17",
        "inherit": [
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "5cbef9624c0c2a3cc4e74ec7c654613ffac7b095ec7e0cde393ef37fe2cd7746",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@dlsl/dev-modules/libs/arrays/SetHelper.sol:11",
        "version": {
          "withMetadata": "ffd6f80c99f39f601468b30a6a512f798ff7552d83728b7520414d6bb460c40d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:30",
        "version": {
          "withMetadata": "dc6dcee60026717634b0c93e2739d49af704164e487930fdb16c8961fe9aa6dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@dlsl/dev-modules/libs/data-structures/StringSet.sol:13",
        "version": {
          "withMetadata": "4e50609ad123a0d38d65289c2a0684757c2c9aa983d61377d61f3b415e002d40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@dlsl/dev-modules/libs/utils/TypeCaster.sol:7",
        "version": {
          "withMetadata": "3c972b2b4d7ba27e98895cc9bab5949478fda55044fc7605b10086fc0f3fd77e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "bb3d9edc8088db372d00a0c9a6e04ea6a9ebd40c17e183922d083ae6fb9ffd57",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "c4d30b59e539d72bc9792770207ed013a45f3b5f377177b217a64acb33ebc7f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin/contracts/utils/Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "3e750203a570f7ec083182723789b1d0121162f00e299bc1a9a71c7f2fef8d20",
          "withoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663",
          "linkedWithoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)13757",
              "contract": "DAOMemberStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)9905_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13757": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9905_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9590_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9590_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "2ea1085ef2d08ce6dfd99e65e8635365fc662e458610b0d43ec2af298a28184d",
          "withoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875",
          "linkedWithoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)14810",
              "contract": "DAOParameterStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)13757",
              "contract": "DAOParameterStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)16740_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)17024_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13757": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)17016": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)14810": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)17024_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)17016",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)16740_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)17024_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev/gdk-contracts/DAO/DAORegistry.sol:41",
        "version": {
          "withMetadata": "2249d0868579e06b3a079877e60ae338c7354d8f3073c58b6ebbb061a87fa65b",
          "withoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff",
          "linkedWithoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "checkPermission(address,string)",
          "getResource()",
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev/gdk-contracts/DAO/DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)13757",
              "contract": "DAORegistry",
              "src": "@q-dev/gdk-contracts/DAO/DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)3228_storage",
              "contract": "DAORegistry",
              "src": "@q-dev/gdk-contracts/DAO/DAORegistry.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)13757": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:45",
        "version": {
          "withMetadata": "01f858c01b13e26dd5c64c6b53977f98c91db66b17a705c22ecfc12094219fe9",
          "withoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858",
          "linkedWithoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:58"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)13757",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:60"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:63"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:66"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:69"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)9905_storage)",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:72"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)10062_storage))",
              "contract": "DAOVault",
              "src": "@q-dev/gdk-contracts/DAO/DAOVault.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13757": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)10062_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)9905_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)2342_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)10062_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9905_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9590_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Queue)2766_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9590_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)2342_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)2766_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)10062_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9590_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev/gdk-contracts/DAO/PermissionManager.sol:30",
        "version": {
          "withMetadata": "bb7fd066f39f327c0eed33d35f5df3023e4ad09a81b75baca5b932575d930c51",
          "withoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770",
          "linkedWithoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770"
        },
        "inherit": [
          "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl/dev-modules/access-control/RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev/gdk-contracts/DAO/PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)9905_storage",
              "contract": "PermissionManager",
              "src": "@q-dev/gdk-contracts/DAO/PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)15082_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev/gdk-contracts/DAO/PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)10534": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)15082_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9905_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9590_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9590_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)15082_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)10534",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:25",
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata": {
        "src": "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev/gdk-contracts/libs/ArrayHelper.sol:13",
        "version": {
          "withMetadata": "9dc12aa1d799ea8ad51879fdfe4577399b968357c1bc44acebf2edb50c9a1b43",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev/gdk-contracts/libs/ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev/gdk-contracts/libs/Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev/gdk-contracts/libs/TimeLocks.sol:13",
        "version": {
          "withMetadata": "dc3e8cadd3dc945e1dda19df589600c3f658c24abc7226b2a401a9626634c8a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev/gdk-contracts/libs/TokenBalance.sol:13",
        "version": {
          "withMetadata": "1f2344933bef5d437bc377d88bdb57e40825c08196cba096c9cfc3d845cc0810",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata": {
        "src": "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/GeneralDAOVoting.sol:GeneralDAOVoting": {
        "src": "contracts/GeneralDAOVoting.sol:24",
        "version": {
          "withMetadata": "04ce65042c86de5843c0416b2da5cfe176b4d63b346995da054f8764061387e3",
          "withoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e",
          "linkedWithoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAOVoting_init((string,address),string)",
          "setDependencies(address,bytes)",
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)",
          "getProposalVotingStats(uint256)",
          "getVotingSituations()",
          "getVotingSituationInfo(string)",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "DAO_VOTING_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:42"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:44"
            },
            {
              "label": "votingToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:46"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:48"
            },
            {
              "label": "daoVault",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(DAOVault)12431",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:50"
            },
            {
              "label": "daoRegistry",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(DAORegistry)11346",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:51"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(PermissionManager)13757",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:52"
            },
            {
              "label": "daoParameterStorage",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(DAOParameterStorage)10849",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:53"
            },
            {
              "label": "_votingSituations",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)3228_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:55"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(DAOProposal)14933_storage)",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:57"
            },
            {
              "label": "hasUserVoted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:58"
            },
            {
              "label": "hasUserVetoed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts/GeneralDAOVoting.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DAOParameterStorage)10849": {
              "label": "contract DAOParameterStorage",
              "numberOfBytes": "20"
            },
            "t_contract(DAORegistry)11346": {
              "label": "contract DAORegistry",
              "numberOfBytes": "20"
            },
            "t_contract(DAOVault)12431": {
              "label": "contract DAOVault",
              "numberOfBytes": "20"
            },
            "t_contract(PermissionManager)13757": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(VotingType)14810": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(DAOProposal)14933_storage)": {
              "label": "mapping(uint256 => struct IDAOVoting.DAOProposal)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DAOProposal)14933_storage": {
              "label": "struct IDAOVoting.DAOProposal",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "remark",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "relatedExpertPanel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "relatedVotingSituation",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "callData",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "params",
                  "type": "t_struct(VotingParams)14892_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "counters",
                  "type": "t_struct(VotingCounters)14899_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "17"
                }
              ],
              "numberOfBytes": "576"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VotingCounters)14899_storage": {
              "label": "struct IDAOVoting.VotingCounters",
              "members": [
                {
                  "label": "votedFor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votedAgainst",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "vetoesCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VotingParams)14892_storage": {
              "label": "struct IDAOVoting.VotingParams",
              "members": [
                {
                  "label": "votingType",
                  "type": "t_enum(VotingType)14810",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vetoEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "proposalExecutionPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "requiredQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "requiredMajority",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "requiredVetoQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/QRC20.sol:QRC20": {
        "src": "contracts/QRC20.sol:19",
        "version": {
          "withMetadata": "4b1a028e0ab6c1b87ecc790280695dd2136cda58b61aefef7be7123c68c4af04",
          "withoutMetadata": "0ee64d3ce15711244703547feb6f763b719f6bd9f5766a01cead10e1cdc37882",
          "linkedWithoutMetadata": "0ee64d3ce15711244703547feb6f763b719f6bd9f5766a01cead10e1cdc37882"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,string,string,uint256)",
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:16"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "QRC20_RESOURCE",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "QRC20",
              "src": "contracts/QRC20.sol:20"
            },
            {
              "label": "totalSupplyCap",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "QRC20",
              "src": "contracts/QRC20.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "154",
              "type": "t_uint8",
              "contract": "QRC20",
              "src": "contracts/QRC20.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop": {
        "src": "contracts/libs/ACampaignAirDrop.sol:22",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof",
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "isWhitelisted(uint256,bytes32,bytes32[])",
          "isWhitelistedUser(uint256,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts/libs/ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)19552_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts/libs/ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts/libs/ACampaignAirDrop.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)19552_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)19552_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts/libs/TokenBalance.sol:13",
        "version": {
          "withMetadata": "665fedaf3b4206724ab2edc9fa3996535ce46ae1755f1cac091d5cb3ef5f17fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/RBAC.sol:RBAC": {
        "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper",
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "5cbef9624c0c2a3cc4e74ec7c654613ffac7b095ec7e0cde393ef37fe2cd7746",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@dlsl\\dev-modules\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "ffd6f80c99f39f601468b30a6a512f798ff7552d83728b7520414d6bb460c40d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "dc6dcee60026717634b0c93e2739d49af704164e487930fdb16c8961fe9aa6dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "4e50609ad123a0d38d65289c2a0684757c2c9aa983d61377d61f3b415e002d40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@dlsl\\dev-modules\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "3c972b2b4d7ba27e98895cc9bab5949478fda55044fc7605b10086fc0f3fd77e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "c4d30b59e539d72bc9792770207ed013a45f3b5f377177b217a64acb33ebc7f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "3e750203a570f7ec083182723789b1d0121162f00e299bc1a9a71c7f2fef8d20",
          "withoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663",
          "linkedWithoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)12418",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)8566_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)12418": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8566_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8251_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8251_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "2ea1085ef2d08ce6dfd99e65e8635365fc662e458610b0d43ec2af298a28184d",
          "withoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875",
          "linkedWithoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)13471",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)12418",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)15381_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)15665_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)12418": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)15657": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)13471": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)15665_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)15657",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)15381_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)15665_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "2249d0868579e06b3a079877e60ae338c7354d8f3073c58b6ebbb061a87fa65b",
          "withoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff",
          "linkedWithoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "checkPermission(address,string)",
          "getResource()",
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)12418",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)3228_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)12418": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:45",
        "version": {
          "withMetadata": "01f858c01b13e26dd5c64c6b53977f98c91db66b17a705c22ecfc12094219fe9",
          "withoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858",
          "linkedWithoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:58"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)12418",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:63"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:66"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:69"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)8566_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:72"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)8723_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)12418": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)8723_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)8566_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)2342_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)8723_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8566_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8251_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Queue)2766_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8251_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)2342_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)2766_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)8723_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8251_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "bb7fd066f39f327c0eed33d35f5df3023e4ad09a81b75baca5b932575d930c51",
          "withoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770",
          "linkedWithoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770"
        },
        "inherit": [
          "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)8566_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)13743_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)9195": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)13743_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8566_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8251_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8251_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)13743_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)9195",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:25",
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "9dc12aa1d799ea8ad51879fdfe4577399b968357c1bc44acebf2edb50c9a1b43",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "dc3e8cadd3dc945e1dda19df589600c3f658c24abc7226b2a401a9626634c8a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "1f2344933bef5d437bc377d88bdb57e40825c08196cba096c9cfc3d845cc0810",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/GeneralDAOVoting.sol:GeneralDAOVoting": {
        "src": "contracts\\GeneralDAOVoting.sol:24",
        "version": {
          "withMetadata": "8ef51e73d97a4d06402651d3a146a06387ba7c07d617abac8575d2d4de202a7b",
          "withoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e",
          "linkedWithoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAOVoting_init((string,address),string)",
          "setDependencies(address,bytes)",
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)",
          "getProposalVotingStats(uint256)",
          "getVotingSituations()",
          "getVotingSituationInfo(string)",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_VOTING_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:42"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:44"
            },
            {
              "label": "votingToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:46"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:48"
            },
            {
              "label": "daoVault",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(DAOVault)11092",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:50"
            },
            {
              "label": "daoRegistry",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(DAORegistry)10007",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:51"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(PermissionManager)12418",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:52"
            },
            {
              "label": "daoParameterStorage",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(DAOParameterStorage)9510",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:53"
            },
            {
              "label": "_votingSituations",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)3228_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:55"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(DAOProposal)13594_storage)",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:57"
            },
            {
              "label": "hasUserVoted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:58"
            },
            {
              "label": "hasUserVetoed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DAOParameterStorage)9510": {
              "label": "contract DAOParameterStorage",
              "numberOfBytes": "20"
            },
            "t_contract(DAORegistry)10007": {
              "label": "contract DAORegistry",
              "numberOfBytes": "20"
            },
            "t_contract(DAOVault)11092": {
              "label": "contract DAOVault",
              "numberOfBytes": "20"
            },
            "t_contract(PermissionManager)12418": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(VotingType)13471": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(DAOProposal)13594_storage)": {
              "label": "mapping(uint256 => struct IDAOVoting.DAOProposal)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DAOProposal)13594_storage": {
              "label": "struct IDAOVoting.DAOProposal",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "remark",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "relatedExpertPanel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "relatedVotingSituation",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "callData",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "params",
                  "type": "t_struct(VotingParams)13553_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "counters",
                  "type": "t_struct(VotingCounters)13560_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "17"
                }
              ],
              "numberOfBytes": "576"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VotingCounters)13560_storage": {
              "label": "struct IDAOVoting.VotingCounters",
              "members": [
                {
                  "label": "votedFor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votedAgainst",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "vetoesCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VotingParams)13553_storage": {
              "label": "struct IDAOVoting.VotingParams",
              "members": [
                {
                  "label": "votingType",
                  "type": "t_enum(VotingType)13471",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vetoEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "proposalExecutionPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "requiredQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "requiredMajority",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "requiredVetoQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/RBAC.sol:RBAC": {
        "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper",
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "5cbef9624c0c2a3cc4e74ec7c654613ffac7b095ec7e0cde393ef37fe2cd7746",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@dlsl\\dev-modules\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "ffd6f80c99f39f601468b30a6a512f798ff7552d83728b7520414d6bb460c40d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "dc6dcee60026717634b0c93e2739d49af704164e487930fdb16c8961fe9aa6dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "4e50609ad123a0d38d65289c2a0684757c2c9aa983d61377d61f3b415e002d40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@dlsl\\dev-modules\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "3c972b2b4d7ba27e98895cc9bab5949478fda55044fc7605b10086fc0f3fd77e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "c4d30b59e539d72bc9792770207ed013a45f3b5f377177b217a64acb33ebc7f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "3e750203a570f7ec083182723789b1d0121162f00e299bc1a9a71c7f2fef8d20",
          "withoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663",
          "linkedWithoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)9263_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9263_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8948_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "2ea1085ef2d08ce6dfd99e65e8635365fc662e458610b0d43ec2af298a28184d",
          "withoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875",
          "linkedWithoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)14168",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)16078_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)16362_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)16354": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)14168": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)16362_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)16354",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)16078_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)16362_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "2249d0868579e06b3a079877e60ae338c7354d8f3073c58b6ebbb061a87fa65b",
          "withoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff",
          "linkedWithoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "checkPermission(address,string)",
          "getResource()",
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)3228_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:45",
        "version": {
          "withMetadata": "01f858c01b13e26dd5c64c6b53977f98c91db66b17a705c22ecfc12094219fe9",
          "withoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858",
          "linkedWithoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:58"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:63"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:66"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:69"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)9263_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:72"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)9420_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)9420_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)9263_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)2342_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)9420_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9263_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Queue)2766_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8948_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)2342_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)2766_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)9420_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "bb7fd066f39f327c0eed33d35f5df3023e4ad09a81b75baca5b932575d930c51",
          "withoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770",
          "linkedWithoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770"
        },
        "inherit": [
          "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)9263_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)14440_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)9892": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)14440_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9263_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8948_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)14440_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)9892",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:25",
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "9dc12aa1d799ea8ad51879fdfe4577399b968357c1bc44acebf2edb50c9a1b43",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "dc3e8cadd3dc945e1dda19df589600c3f658c24abc7226b2a401a9626634c8a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "1f2344933bef5d437bc377d88bdb57e40825c08196cba096c9cfc3d845cc0810",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV2.sol:AirDropV2": {
        "src": "contracts\\AirDropV2.sol:35",
        "version": {
          "withMetadata": "8835adb790e2dfd460f8e69c9cea8f00ac90de230c4f5bc5d933413899436dad",
          "withoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc",
          "linkedWithoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc"
        },
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop"
        ],
        "libraries": [],
        "methods": [
          "__AirDropV2_init(address)",
          "createCampaign(address,uint256,bytes32,uint256,uint256)",
          "claimReward(uint256,address,bytes32[])",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)17259_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "3",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "votingContract",
              "offset": 2,
              "slot": "3",
              "type": "t_address",
              "contract": "AirDropV2",
              "src": "contracts\\AirDropV2.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)17259_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)17259_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop": {
        "src": "contracts\\libs\\ACampaignAirDrop.sol:22",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof",
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "isWhitelisted(uint256,bytes32,bytes32[])",
          "isWhitelistedUser(uint256,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)17259_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)17259_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)17259_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "665fedaf3b4206724ab2edc9fa3996535ce46ae1755f1cac091d5cb3ef5f17fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/RBAC.sol:RBAC": {
        "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper",
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "5cbef9624c0c2a3cc4e74ec7c654613ffac7b095ec7e0cde393ef37fe2cd7746",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@dlsl\\dev-modules\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "ffd6f80c99f39f601468b30a6a512f798ff7552d83728b7520414d6bb460c40d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "dc6dcee60026717634b0c93e2739d49af704164e487930fdb16c8961fe9aa6dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "4e50609ad123a0d38d65289c2a0684757c2c9aa983d61377d61f3b415e002d40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@dlsl\\dev-modules\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "3c972b2b4d7ba27e98895cc9bab5949478fda55044fc7605b10086fc0f3fd77e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "c4d30b59e539d72bc9792770207ed013a45f3b5f377177b217a64acb33ebc7f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "3e750203a570f7ec083182723789b1d0121162f00e299bc1a9a71c7f2fef8d20",
          "withoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663",
          "linkedWithoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)9263_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9263_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8948_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "2ea1085ef2d08ce6dfd99e65e8635365fc662e458610b0d43ec2af298a28184d",
          "withoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875",
          "linkedWithoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)14168",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)16078_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)16362_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)16354": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)14168": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)16362_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)16354",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)16078_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)16362_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "2249d0868579e06b3a079877e60ae338c7354d8f3073c58b6ebbb061a87fa65b",
          "withoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff",
          "linkedWithoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "checkPermission(address,string)",
          "getResource()",
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)3228_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:45",
        "version": {
          "withMetadata": "01f858c01b13e26dd5c64c6b53977f98c91db66b17a705c22ecfc12094219fe9",
          "withoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858",
          "linkedWithoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:58"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)13115",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:63"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:66"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:69"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)9263_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:72"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)9420_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2342_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)9420_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)9263_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)2342_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)9420_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9263_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Queue)2766_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8948_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)2342_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)2766_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)9420_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "bb7fd066f39f327c0eed33d35f5df3023e4ad09a81b75baca5b932575d930c51",
          "withoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770",
          "linkedWithoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770"
        },
        "inherit": [
          "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)9263_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)14440_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)9892": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)3228_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3228_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3228_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3228_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)14440_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9263_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)8948_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)8948_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)14440_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)9892",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:25",
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)1913",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)1913": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "9dc12aa1d799ea8ad51879fdfe4577399b968357c1bc44acebf2edb50c9a1b43",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "dc3e8cadd3dc945e1dda19df589600c3f658c24abc7226b2a401a9626634c8a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "1f2344933bef5d437bc377d88bdb57e40825c08196cba096c9cfc3d845cc0810",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV2.sol:AirDropV2": {
        "src": "contracts\\AirDropV2.sol:35",
        "version": {
          "withMetadata": "e14f0cb426c9fa7733f111dbccc8284c770dfb280ac441f1c7a88a410129d1aa",
          "withoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc",
          "linkedWithoutMetadata": "192df8637ebc7a4e358f23556e4ec55f933c189566dee69c76092e553ee511dc"
        },
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable",
          "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop"
        ],
        "libraries": [],
        "methods": [
          "__AirDropV2_init(address)",
          "createCampaign(address,uint256,bytes32,uint256,uint256)",
          "claimReward(uint256,address,bytes32[])",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)18803_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            },
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "3",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "votingContract",
              "offset": 2,
              "slot": "3",
              "type": "t_address",
              "contract": "AirDropV2",
              "src": "contracts\\AirDropV2.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)18803_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)18803_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/GeneralDAOVoting.sol:GeneralDAOVoting": {
        "src": "contracts\\GeneralDAOVoting.sol:24",
        "version": {
          "withMetadata": "8ef51e73d97a4d06402651d3a146a06387ba7c07d617abac8575d2d4de202a7b",
          "withoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e",
          "linkedWithoutMetadata": "392ed70e76ed915eb6cca2df8b2c3b4f5f6e6c3c8567fc0276ddf9744c98765e"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAOVoting_init((string,address),string)",
          "setDependencies(address,bytes)",
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)",
          "getProposalVotingStats(uint256)",
          "getVotingSituations()",
          "getVotingSituationInfo(string)",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_VOTING_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:42"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:44"
            },
            {
              "label": "votingToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:46"
            },
            {
              "label": "proposalCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:48"
            },
            {
              "label": "daoVault",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(DAOVault)11789",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:50"
            },
            {
              "label": "daoRegistry",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(DAORegistry)10704",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:51"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(PermissionManager)13115",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:52"
            },
            {
              "label": "daoParameterStorage",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(DAOParameterStorage)10207",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:53"
            },
            {
              "label": "_votingSituations",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Set)3228_storage",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:55"
            },
            {
              "label": "proposals",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_struct(DAOProposal)14291_storage)",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:57"
            },
            {
              "label": "hasUserVoted",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:58"
            },
            {
              "label": "hasUserVetoed",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "GeneralDAOVoting",
              "src": "contracts\\GeneralDAOVoting.sol:59"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DAOParameterStorage)10207": {
              "label": "contract DAOParameterStorage",
              "numberOfBytes": "20"
            },
            "t_contract(DAORegistry)10704": {
              "label": "contract DAORegistry",
              "numberOfBytes": "20"
            },
            "t_contract(DAOVault)11789": {
              "label": "contract DAOVault",
              "numberOfBytes": "20"
            },
            "t_contract(PermissionManager)13115": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(VotingType)14168": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(DAOProposal)14291_storage)": {
              "label": "mapping(uint256 => struct IDAOVoting.DAOProposal)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(DAOProposal)14291_storage": {
              "label": "struct IDAOVoting.DAOProposal",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "remark",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "relatedExpertPanel",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "relatedVotingSituation",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "callData",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "params",
                  "type": "t_struct(VotingParams)14250_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "counters",
                  "type": "t_struct(VotingCounters)14257_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "17"
                }
              ],
              "numberOfBytes": "576"
            },
            "t_struct(Set)3228_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VotingCounters)14257_storage": {
              "label": "struct IDAOVoting.VotingCounters",
              "members": [
                {
                  "label": "votedFor",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votedAgainst",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "vetoesCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(VotingParams)14250_storage": {
              "label": "struct IDAOVoting.VotingParams",
              "members": [
                {
                  "label": "votingType",
                  "type": "t_enum(VotingType)14168",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votingStartTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "votingEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "vetoEndTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "proposalExecutionPeriod",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "requiredQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "requiredMajority",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "requiredVetoQuorum",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/ACampaignAirDrop.sol:ACampaignAirDrop": {
        "src": "contracts\\libs\\ACampaignAirDrop.sol:22",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof",
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "isWhitelisted(uint256,bytes32,bytes32[])",
          "isWhitelistedUser(uint256,address,bytes32[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "campaignCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:50"
            },
            {
              "label": "campaigns",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Campaign)18803_storage)",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:53"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
              "contract": "ACampaignAirDrop",
              "src": "contracts\\libs\\ACampaignAirDrop.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
              "label": "mapping(uint256 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Campaign)18803_storage)": {
              "label": "mapping(uint256 => struct ACampaignAirDrop.Campaign)",
              "numberOfBytes": "32"
            },
            "t_struct(Campaign)18803_storage": {
              "label": "struct ACampaignAirDrop.Campaign",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rewardAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "startTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "merkleRoot",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "665fedaf3b4206724ab2edc9fa3996535ce46ae1755f1cac091d5cb3ef5f17fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted": {
        "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "isWhitelisted(bytes32,bytes32[])",
          "isWhitelistedUser(address,bytes32[])",
          "getMerkleRoot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/RBAC.sol:RBAC": {
        "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper",
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3336_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3336_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3336_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3336_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)2021",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)2021": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "5cbef9624c0c2a3cc4e74ec7c654613ffac7b095ec7e0cde393ef37fe2cd7746",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@dlsl\\dev-modules\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "ffd6f80c99f39f601468b30a6a512f798ff7552d83728b7520414d6bb460c40d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "dc6dcee60026717634b0c93e2739d49af704164e487930fdb16c8961fe9aa6dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "4e50609ad123a0d38d65289c2a0684757c2c9aa983d61377d61f3b415e002d40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@dlsl\\dev-modules\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "3c972b2b4d7ba27e98895cc9bab5949478fda55044fc7605b10086fc0f3fd77e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "c4d30b59e539d72bc9792770207ed013a45f3b5f377177b217a64acb33ebc7f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "3e750203a570f7ec083182723789b1d0121162f00e299bc1a9a71c7f2fef8d20",
          "withoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663",
          "linkedWithoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)13189",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)9337_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13189": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9337_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9022_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9022_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "2ea1085ef2d08ce6dfd99e65e8635365fc662e458610b0d43ec2af298a28184d",
          "withoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875",
          "linkedWithoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)14242",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)13189",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)16152_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)16436_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13189": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)16428": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)14242": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)16436_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)16428",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)16152_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)16436_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "2249d0868579e06b3a079877e60ae338c7354d8f3073c58b6ebbb061a87fa65b",
          "withoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff",
          "linkedWithoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "checkPermission(address,string)",
          "getResource()",
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)2021",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)13189",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)3336_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)13189": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)2021": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:45",
        "version": {
          "withMetadata": "01f858c01b13e26dd5c64c6b53977f98c91db66b17a705c22ecfc12094219fe9",
          "withoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858",
          "linkedWithoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:58"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)13189",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:63"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2450_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:66"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:69"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)9337_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:72"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)9494_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)13189": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2450_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)9494_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)9337_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)2450_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)9494_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9337_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9022_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Queue)2874_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9022_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)2450_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)2874_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)9494_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9022_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "bb7fd066f39f327c0eed33d35f5df3023e4ad09a81b75baca5b932575d930c51",
          "withoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770",
          "linkedWithoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770"
        },
        "inherit": [
          "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)9337_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)14514_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)9966": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)3336_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3336_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)14514_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)9337_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9022_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9022_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)14514_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)9966",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:25",
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)2021",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)2021": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "9dc12aa1d799ea8ad51879fdfe4577399b968357c1bc44acebf2edb50c9a1b43",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "dc3e8cadd3dc945e1dda19df589600c3f658c24abc7226b2a401a9626634c8a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "1f2344933bef5d437bc377d88bdb57e40825c08196cba096c9cfc3d845cc0810",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV1.sol:AirDropV1": {
        "src": "contracts\\AirDropV1.sol:36",
        "version": {
          "withMetadata": "f2afb251522878561e251cd4e41c62e9edebf1fe6b34c32ab97cd841c360826e",
          "withoutMetadata": "abbac8898d4b1d34c03a094fd969410560934c7966d908c28981c7f4d61d3141",
          "linkedWithoutMetadata": "abbac8898d4b1d34c03a094fd969410560934c7966d908c28981c7f4d61d3141"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted"
        ],
        "libraries": [
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "create_airdrop(address,uint256,bytes32)",
          "claimReward(address,bytes32[])",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:60"
            },
            {
              "label": "rewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:61"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "665fedaf3b4206724ab2edc9fa3996535ce46ae1755f1cac091d5cb3ef5f17fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "bb3d9edc8088db372d00a0c9a6e04ea6a9ebd40c17e183922d083ae6fb9ffd57",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IContractMetadata.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/QRC20.sol:QRC20": {
        "src": "contracts\\QRC20.sol:19",
        "version": {
          "withMetadata": "4b1a028e0ab6c1b87ecc790280695dd2136cda58b61aefef7be7123c68c4af04",
          "withoutMetadata": "0ee64d3ce15711244703547feb6f763b719f6bd9f5766a01cead10e1cdc37882",
          "linkedWithoutMetadata": "0ee64d3ce15711244703547feb6f763b719f6bd9f5766a01cead10e1cdc37882"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,uint8,string,string,uint256)",
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:16"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "QRC20_RESOURCE",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:20"
            },
            {
              "label": "totalSupplyCap",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "154",
              "type": "t_uint8",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted": {
        "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:20",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof"
        ],
        "methods": [
          "isWhitelisted(bytes32,bytes32[])",
          "isWhitelistedUser(address,bytes32[])",
          "getMerkleRoot()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            }
          ],
          "types": {
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/RBAC.sol:RBAC": {
        "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:25",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper",
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3336_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3336_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable": {
        "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:17",
        "inherit": [
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet",
          "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper"
        ],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Set)3336_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3336_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:38",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getContract(string)",
          "hasContract(string)",
          "getProxyUpgrader()",
          "getImplementation(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)2021",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)2021": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractDependant.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDependencies(address,bytes)",
          "setInjector(address)",
          "getInjector()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/contracts-registry/proxy/ProxyUpgrader.sol:ProxyUpgrader": {
        "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:13",
        "version": {
          "withMetadata": "5cbef9624c0c2a3cc4e74ec7c654613ffac7b095ec7e0cde393ef37fe2cd7746",
          "withoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632",
          "linkedWithoutMetadata": "0cb94caca0224d8ab86eda3ce6b3c6f76e533badfa183d22b94c8f83ebe4f632"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "()",
          "upgrade(address,address,bytes)",
          "getImplementation(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ProxyUpgrader",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_OWNER",
            "src": "@dlsl\\dev-modules\\contracts-registry\\proxy\\ProxyUpgrader.sol:16"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\IRBAC.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "grantRoles(address,string[])",
          "revokeRoles(address,string[])",
          "addPermissionsToRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "removePermissionsFromRole(string,struct IRBAC.ResourceWithPermissions[],bool)",
          "getUserRoles(address)",
          "getRolePermissions(string)",
          "hasPermission(address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable": {
        "src": "@dlsl\\dev-modules\\interfaces\\access-control\\extensions\\IRBACGroupable.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addUserToGroups(address,string[])",
          "removeUserFromGroups(address,string[])",
          "grantGroupRoles(string,string[])",
          "revokeGroupRoles(string,string[])",
          "toggleDefaultGroup()",
          "getUserGroups(address)",
          "getGroupRoles(string)",
          "getDefaultGroupEnabled()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/arrays/SetHelper.sol:SetHelper": {
        "src": "@dlsl\\dev-modules\\libs\\arrays\\SetHelper.sol:11",
        "version": {
          "withMetadata": "ffd6f80c99f39f601468b30a6a512f798ff7552d83728b7520414d6bb460c40d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\PriorityQueue.sol:30",
        "version": {
          "withMetadata": "dc6dcee60026717634b0c93e2739d49af704164e487930fdb16c8961fe9aa6dd",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet": {
        "src": "@dlsl\\dev-modules\\libs\\data-structures\\StringSet.sol:13",
        "version": {
          "withMetadata": "4e50609ad123a0d38d65289c2a0684757c2c9aa983d61377d61f3b415e002d40",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@dlsl/dev-modules/libs/utils/TypeCaster.sol:TypeCaster": {
        "src": "@dlsl\\dev-modules\\libs\\utils\\TypeCaster.sol:7",
        "version": {
          "withMetadata": "3c972b2b4d7ba27e98895cc9bab5949478fda55044fc7605b10086fc0f3fd77e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
        "version": {
          "withMetadata": "bb3d9edc8088db372d00a0c9a6e04ea6a9ebd40c17e183922d083ae6fb9ffd57",
          "withoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa",
          "linkedWithoutMetadata": "bfb16c88629f1e26c952a255d33869c7ee834a142e95f0e1c4c1d6a86a3d87fa"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "bfa3d39a6f3678519a4a3aa4f4ed7c0d2033fc82c0d67cf114efebe64b3c9b36",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "withoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99",
          "linkedWithoutMetadata": "3032f89de1add86f981b5cd8ed09bb45af8c0bdd4bc06592d9be92a98224bb99"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin\\contracts\\proxy\\ERC1967\\ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin\\contracts\\proxy\\Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "withoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b",
          "linkedWithoutMetadata": "5ec28ecd14143e02be07ea92b08dfd11353a10e0d32afb3a1a1cf4457561693b"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin\\contracts\\proxy\\transparent\\TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "c4d30b59e539d72bc9792770207ed013a45f3b5f377177b217a64acb33ebc7f6",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1a64707d5628213d26b88a177e982fc4a55fed9c8e054c9d382992aaa7e093c0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin\\contracts\\utils\\Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin\\contracts\\utils\\StorageSlot.sol:34",
        "version": {
          "withMetadata": "8b19416e395966722907ddaea35527c23252497ed1fb183a6134960fcbf45bcc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:12",
        "version": {
          "withMetadata": "5b54dd5f5eb54829f375009802bb2ed9f62b6af28344edc1688494798484e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol:MerkleProof": {
        "src": "@openzeppelin\\contracts\\utils\\cryptography\\MerkleProof.sol:20",
        "version": {
          "withMetadata": "b19e991b949a34c18a228833d89201439db835822930036a99d60ec95eec2801",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165Checker.sol:15",
        "version": {
          "withMetadata": "d1ff858ca8e63f146c6327a9c5529367d0aaf5c16c3113c298a0d3250ba81ab2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "964f7b5aa8a88d9e34de245a6928f723ed3f1d993b170d47a8e1a3c163800bf2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SignedMath.sol:9",
        "version": {
          "withMetadata": "7998c185e41619e7e33ca383efd9cdf2952fad64f3402bacc3e26b71b36d3ee0",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin\\contracts\\utils\\structs\\EnumerableSet.sol:41",
        "version": {
          "withMetadata": "3b9d6b728d4abc0d185eaecd4ccd1f5730f3c6d618403b49a4db2f1abbdc162b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOMemberStorage.sol:DAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:22",
        "version": {
          "withMetadata": "3e750203a570f7ec083182723789b1d0121162f00e299bc1a9a71c7f2fef8d20",
          "withoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663",
          "linkedWithoutMetadata": "d6d94b1d97f18e61965c7c8f75c9fcd9a68177e3e02750cab568a1b7aa09b663"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__DAOMemberStorage_init(string,string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_MEMBER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:25"
            },
            {
              "label": "targetPanel",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:27"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(PermissionManager)14000",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:29"
            },
            {
              "label": "_members",
              "offset": 0,
              "slot": "4",
              "type": "t_struct(AddressSet)10148_storage",
              "contract": "DAOMemberStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOMemberStorage.sol:31"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)14000": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10148_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9833_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9833_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOParameterStorage.sol:DAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:24",
        "version": {
          "withMetadata": "2ea1085ef2d08ce6dfd99e65e8635365fc662e458610b0d43ec2af298a28184d",
          "withoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875",
          "linkedWithoutMetadata": "4261cfe11ce3b17667c5c6fe89e7d623f2e77707508e6ce85c9955851c752875"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet"
        ],
        "methods": [
          "__DAOParameterStorage_init(string)",
          "setDependencies(address,bytes)",
          "checkPermission(address,string)",
          "getResource()",
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "DAO_PARAMETER_STORAGE_RESOURCE",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:29"
            },
            {
              "label": "votingType",
              "offset": 0,
              "slot": "2",
              "type": "t_enum(VotingType)15053",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:31"
            },
            {
              "label": "permissionManager",
              "offset": 1,
              "slot": "2",
              "type": "t_contract(PermissionManager)14000",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:33"
            },
            {
              "label": "_parameters",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Set)16983_storage",
              "contract": "DAOParameterStorage",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOParameterStorage.sol:35"
            }
          ],
          "types": {
            "t_array(t_struct(Parameter)17267_storage)dyn_storage": {
              "label": "struct Parameter[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)14000": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_enum(ParameterType)17259": {
              "label": "enum ParameterType",
              "members": [
                "NONE",
                "ADDRESS",
                "UINT",
                "STRING",
                "BYTES",
                "BOOL"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(VotingType)15053": {
              "label": "enum VotingType",
              "members": [
                "NON_RESTRICTED",
                "RESTRICTED",
                "PARTIALLY_RESTRICTED"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Parameter)17267_storage": {
              "label": "struct Parameter",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "value",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "solidityType",
                  "type": "t_enum(ParameterType)17259",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)16983_storage": {
              "label": "struct ParameterSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_struct(Parameter)17267_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAORegistry.sol:DAORegistry": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:41",
        "version": {
          "withMetadata": "2249d0868579e06b3a079877e60ae338c7354d8f3073c58b6ebbb061a87fa65b",
          "withoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff",
          "linkedWithoutMetadata": "a0d007b434230095e6b863b9e017563882a909a0dd6a5b8f892c7dcf9eb0b8ff"
        },
        "inherit": [
          "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry",
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824",
          "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec",
          "@dlsl/dev-modules/libs/data-structures/StringSet.sol:StringSet"
        ],
        "methods": [
          "__DAORegistry_init(address,address,string,string,string)",
          "checkPermission(address,string)",
          "getResource()",
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(ProxyUpgrader)2021",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            },
            {
              "label": "DAO_REGISTRY_RESOURCE",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:46"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PermissionManager)14000",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:48"
            },
            {
              "label": "_panels",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Set)3336_storage",
              "contract": "DAORegistry",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAORegistry.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(PermissionManager)14000": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_contract(ProxyUpgrader)2021": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/DAOVault.sol:DAOVault": {
        "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:45",
        "version": {
          "withMetadata": "01f858c01b13e26dd5c64c6b53977f98c91db66b17a705c22ecfc12094219fe9",
          "withoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858",
          "linkedWithoutMetadata": "8c5005a43a31b7bad99e4e7f50d2b982014474b630eacd8ed50faf9b9d0d7858"
        },
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractDependant.sol:AbstractDependant",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance",
          "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol:ERC165Checker",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet",
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue",
          "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper"
        ],
        "methods": [
          "()",
          "__DAOVault_init(address)",
          "setDependencies(address,bytes)",
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "CONNECTED_DAO_REGISTRY",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:58"
            },
            {
              "label": "permissionManager",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PermissionManager)14000",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:60"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:63"
            },
            {
              "label": "lockedTokens",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2450_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:66"
            },
            {
              "label": "tokenBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:69"
            },
            {
              "label": "_userTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_struct(AddressSet)10148_storage)",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:72"
            },
            {
              "label": "_userNFTs",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)10305_storage))",
              "contract": "DAOVault",
              "src": "@q-dev\\gdk-contracts\\DAO\\DAOVault.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(PermissionManager)14000": {
              "label": "contract PermissionManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintQueue)2450_storage))": {
              "label": "mapping(address => mapping(address => struct PriorityQueue.UintQueue))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(UintSet)10305_storage))": {
              "label": "mapping(address => mapping(address => struct EnumerableSet.UintSet))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AddressSet)10148_storage)": {
              "label": "mapping(address => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintQueue)2450_storage)": {
              "label": "mapping(address => struct PriorityQueue.UintQueue)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UintSet)10305_storage)": {
              "label": "mapping(address => struct EnumerableSet.UintSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10148_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9833_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Queue)2874_storage": {
              "label": "struct PriorityQueue.Queue",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_priorities",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9833_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintQueue)2450_storage": {
              "label": "struct PriorityQueue.UintQueue",
              "members": [
                {
                  "label": "_queue",
                  "type": "t_struct(Queue)2874_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UintSet)10305_storage": {
              "label": "struct EnumerableSet.UintSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9833_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/DAO/PermissionManager.sol:PermissionManager": {
        "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:30",
        "version": {
          "withMetadata": "bb7fd066f39f327c0eed33d35f5df3023e4ad09a81b75baca5b932575d930c51",
          "withoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770",
          "linkedWithoutMetadata": "a7d22f506f437b3b19b0855956813f49ede095282166f5c305e77dc17e52c770"
        },
        "inherit": [
          "@dlsl/dev-modules/access-control/extensions/RBACGroupable.sol:RBACGroupable",
          "@dlsl/dev-modules/access-control/RBAC.sol:RBAC",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager",
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC",
          "@dlsl/dev-modules/interfaces/access-control/extensions/IRBACGroupable.sol:IRBACGroupable"
        ],
        "libraries": [
          "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper",
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "__PermissionManager_init(address,address,string,string)",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)",
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoGroupMembers(address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_rolePermissions",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:42"
            },
            {
              "label": "_roleResources",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:43"
            },
            {
              "label": "_userRoles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBAC",
              "src": "@dlsl\\dev-modules\\access-control\\RBAC.sol:45"
            },
            {
              "label": "_defaultGroupEnabled",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:21"
            },
            {
              "label": "_userGroups",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:23"
            },
            {
              "label": "_groupRoles",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)",
              "contract": "RBACGroupable",
              "src": "@dlsl\\dev-modules\\access-control\\extensions\\RBACGroupable.sol:24"
            },
            {
              "label": "PERMISSION_MANAGER_RESOURCE",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:36"
            },
            {
              "label": "_existingVetoGroupTargets",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(AddressSet)10148_storage",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:38"
            },
            {
              "label": "_vetoGroups",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)15325_storage)",
              "contract": "PermissionManager",
              "src": "@q-dev\\gdk-contracts\\DAO\\PermissionManager.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(DAOMemberStorage)10777": {
              "label": "contract DAOMemberStorage",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Set)3336_storage)": {
              "label": "mapping(address => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage))": {
              "label": "mapping(bool => mapping(string => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bool,t_struct(Set)3336_storage)": {
              "label": "mapping(bool => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)))": {
              "label": "mapping(string => mapping(bool => mapping(string => struct StringSet.Set)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_bool,t_struct(Set)3336_storage))": {
              "label": "mapping(string => mapping(bool => struct StringSet.Set))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Set)3336_storage)": {
              "label": "mapping(string => struct StringSet.Set)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(VetoGroup)15325_storage)": {
              "label": "mapping(string => struct IPermissionManager.VetoGroup)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)10148_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)9833_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)3336_storage": {
              "label": "struct StringSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_string_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_string_memory_ptr,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)9833_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(VetoGroup)15325_storage": {
              "label": "struct IPermissionManager.VetoGroup",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "linkedMemberStorage",
                  "type": "t_contract(DAOMemberStorage)10777",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/core/registry/RoleManagedRegistry.sol:RoleManagedRegistry": {
        "src": "@q-dev\\gdk-contracts\\core\\registry\\RoleManagedRegistry.sol:25",
        "inherit": [
          "@dlsl/dev-modules/contracts-registry/AbstractContractsRegistry.sol:AbstractContractsRegistry",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "getPermissionManager()",
          "injectDependencies(string)",
          "upgradeContract(string,address)",
          "upgradeContractAndCall(string,address,bytes)",
          "addContract(string,address)",
          "addProxyContract(string,address)",
          "justAddProxyContract(string,address)",
          "removeContract(string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_proxyUpgrader",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ProxyUpgrader)2021",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:39"
            },
            {
              "label": "_contracts",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_address)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:41"
            },
            {
              "label": "_isProxy",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "AbstractContractsRegistry",
              "src": "@dlsl\\dev-modules\\contracts-registry\\AbstractContractsRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ProxyUpgrader)2021": {
              "label": "contract ProxyUpgrader",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_address)": {
              "label": "mapping(string => address)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOIntegration.sol:IDAOIntegration": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOIntegration.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getResourceRecords()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOMemberStorage.sol:IDAOMemberStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOMemberStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addMember(address)",
          "addMembers(address[])",
          "removeMember(address)",
          "removeMembers(address[])",
          "isMember(address)",
          "getMembers()",
          "getMembersCount()",
          "getGroup()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOParameterStorage.sol:IDAOParameterStorage": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOParameterStorage.sol:12",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "setDAOParameter((string,bytes,uint8))",
          "setDAOParameters(struct Parameter[])",
          "removeDAOParameter(string)",
          "removeDAOParameters(string[])",
          "getDAOParameter(string)",
          "getDAOParameters()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAORegistry.sol:IDAORegistry": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAORegistry.sol:13",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "addPanel(string)",
          "removePanel(string)",
          "getPanels()",
          "isAbleToAddPanel()",
          "getAccountStatuses(address)",
          "getConfDAOParameterStorage(string)",
          "getRegDAOParameterStorage(string)",
          "getDAOMemberStorage(string)",
          "getGeneralDAOVoting(string)",
          "getExpertsDAOVoting(string)",
          "getVotingFactory()",
          "getVotingRegistry()",
          "getDAOVault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOResource.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkPermission(address,string)",
          "getResource()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVault.sol:IDAOVault": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVault.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositNative()",
          "depositERC20(address,uint256)",
          "depositNFT(address,uint256)",
          "authorizeBySBT(address)",
          "lock(address,address,uint256,uint256)",
          "withdrawNative(uint256)",
          "withdrawERC20(address,uint256)",
          "withdrawNFT(address,uint256)",
          "revokeSBTAuthorization(address)",
          "getTokenSupply(address)",
          "getUserVotingPower(address,address)",
          "getUserTokens(address)",
          "getTimeLockInfo(address,address)",
          "getUserNFTs(address,address)",
          "isAuthorizedBySBT(address,address)",
          "isSupportedNFT(address)",
          "isSupportedSBT(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IDAOVoting.sol:IDAOVoting": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IDAOVoting.sol:16",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource"
        ],
        "libraries": [],
        "methods": [
          "createDAOVotingSituation((string,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,string,uint256)))",
          "removeVotingSituation(string)",
          "getVotingSituations()",
          "createProposal(string,string,bytes)",
          "voteFor(uint256)",
          "voteAgainst(uint256)",
          "veto(uint256)",
          "executeProposal(uint256)",
          "getProposal(uint256)",
          "getProposalList(uint256,uint256)",
          "getProposalStatus(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/IPermissionManager.sol:IPermissionManager": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\IPermissionManager.sol:18",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/IDAOResource.sol:IDAOResource",
          "@dlsl/dev-modules/interfaces/access-control/IRBAC.sol:IRBAC"
        ],
        "libraries": [],
        "methods": [
          "initialConfiguration(address,address,string,string)",
          "addVetoGroups(struct IPermissionManager.VetoGroup[])",
          "addVetoGroup(address,string,address)",
          "removeVetoGroup(address)",
          "linkStorageToVetoGroup(address,address)",
          "getVetoMembersCount(address)",
          "getVetoGroupInfo(address)",
          "isVetoGroupExists(address)",
          "getExistingVetoGroupTargets()",
          "confExternalModule(address,string)",
          "confVotingModule(address,string,address,string)",
          "confMemberGroup(address,string,string)",
          "confExpertsGroups(string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IContractMetadata.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IDAOMetadata.sol:10",
        "inherit": [
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\metadata\\IERC4824.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IERC5484.sol:IERC5484": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IERC5484.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burnAuth(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20": {
        "src": "@q-dev\\gdk-contracts\\interfaces\\tokens\\IQRC20.sol:10",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ArrayHelper.sol:ArrayHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\ArrayHelper.sol:13",
        "version": {
          "withMetadata": "9dc12aa1d799ea8ad51879fdfe4577399b968357c1bc44acebf2edb50c9a1b43",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/ParameterSet.sol:ParameterSet": {
        "src": "@q-dev\\gdk-contracts\\libs\\ParameterSet.sol:9",
        "version": {
          "withMetadata": "6640d67bc3afc2e083ce0a5cde100aeb208d82f637cc79b41af6fcbd40676f4c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/Parameters.sol:ParameterCodec": {
        "src": "@q-dev\\gdk-contracts\\libs\\Parameters.sol:23",
        "version": {
          "withMetadata": "a2ce6fce3f24cd8c3c67b40f0379bac83ea227dcc0a6506ef68447458822db29",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TimeLocks.sol:TimeLockHelper": {
        "src": "@q-dev\\gdk-contracts\\libs\\TimeLocks.sol:13",
        "version": {
          "withMetadata": "dc3e8cadd3dc945e1dda19df589600c3f658c24abc7226b2a401a9626634c8a3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@dlsl/dev-modules/libs/data-structures/PriorityQueue.sol:PriorityQueue"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "@q-dev\\gdk-contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "1f2344933bef5d437bc377d88bdb57e40825c08196cba096c9cfc3d845cc0810",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "setContractMetadata(string)",
          "contractURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "@q-dev/gdk-contracts/metadata/DAOMetadata.sol:DAOMetadata": {
        "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IDAOMetadata.sol:IDAOMetadata",
          "@q-dev/gdk-contracts/interfaces/metadata/IERC4824.sol:EIP4824"
        ],
        "libraries": [],
        "methods": [
          "setDAOMetadata(string)",
          "daoURI()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "_uri",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "DAOMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\DAOMetadata.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/AirDropV1.sol:AirDropV1": {
        "src": "contracts\\AirDropV1.sol:36",
        "version": {
          "withMetadata": "a07e8a9d7a8a375992d0ac2aadb903c38e1f0b2966bb92ca4b847027566bfa13",
          "withoutMetadata": "1882e611b83086bac87a3e36220be37860dba6e87d11a70241550341dc876ff5",
          "linkedWithoutMetadata": "1882e611b83086bac87a3e36220be37860dba6e87d11a70241550341dc876ff5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@dlsl/dev-modules/access-control/MerkleWhitelisted.sol:MerkleWhitelisted"
        ],
        "libraries": [
          "contracts/libs/TokenBalance.sol:TokenBalance"
        ],
        "methods": [
          "(address,uint256,bytes32)",
          "claimReward(address,bytes32[])",
          "setMerkleRoot(bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AirDropV1",
            "src": "contracts\\AirDropV1.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_merkleRoot",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "MerkleWhitelisted",
              "src": "@dlsl\\dev-modules\\access-control\\MerkleWhitelisted.sol:23"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "rewardToken",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:60"
            },
            {
              "label": "rewardAmount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:61"
            },
            {
              "label": "isUserClaimed",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
              "contract": "AirDropV1",
              "src": "contracts\\AirDropV1.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
              "label": "mapping(bytes32 => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/QRC20.sol:QRC20": {
        "src": "contracts\\QRC20.sol:19",
        "version": {
          "withMetadata": "6a441b68d810852668e37ecdfa7b4ecd5b2234fa3f1d28fe8d26d4f88954723a",
          "withoutMetadata": "0651a849fb8ef8efddaf7e2ec04cd79b146a4093d826295276c6931c3bce9e32",
          "linkedWithoutMetadata": "0651a849fb8ef8efddaf7e2ec04cd79b146a4093d826295276c6931c3bce9e32"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@q-dev/gdk-contracts/metadata/ContractMetadata.sol:ContractMetadata",
          "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "@q-dev/gdk-contracts/interfaces/tokens/IQRC20.sol:IQRC20",
          "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "@q-dev/gdk-contracts/interfaces/metadata/IContractMetadata.sol:IContractMetadata"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "mintTo(address,uint256)",
          "burnFrom(address,uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:46"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:47"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:376"
            },
            {
              "label": "_contractURI",
              "offset": 0,
              "slot": "101",
              "type": "t_string_storage",
              "contract": "ContractMetadata",
              "src": "@q-dev\\gdk-contracts\\metadata\\ContractMetadata.sol:16"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "102",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "103",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
            },
            {
              "label": "QRC20_RESOURCE",
              "offset": 0,
              "slot": "152",
              "type": "t_string_storage",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:20"
            },
            {
              "label": "totalSupplyCap",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:21"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "154",
              "type": "t_uint8",
              "contract": "QRC20",
              "src": "contracts\\QRC20.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true
        },
        "solcVersion": "0.8.19"
      },
      "contracts/libs/TokenBalance.sol:TokenBalance": {
        "src": "contracts\\libs\\TokenBalance.sol:13",
        "version": {
          "withMetadata": "665fedaf3b4206724ab2edc9fa3996535ce46ae1755f1cac091d5cb3ef5f17fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}